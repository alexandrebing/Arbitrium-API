var db = require('../models/index.js');
var Json2csvParser = require('json2csv').Parser;

exports.findAll = function(req,res){
    var fields = ['participante',
                  'prim_evento',
                  'prim_resposta',
                  'tempo_prim_resposta',
                  'segundo_evento',
                  'segunda_resposta',
                  'tempo_seg_resposta',
                  'terceiro_evento',
                  'terceira_resposta',
                  'tempo_ter_resposta',
                  'dinheiro_1',
                  'saude_1',
                  'familia_1',
                  'trabalho_1',
                  'quarto_evento',
                  'quarta_resposta',
                  'tempo_ter_resposta',
                  'tempo_qua_resposta',
                  'quinto_evento',
                  'tempo_qui_resposta',
                  'sexto_evento',
                  'sexta_resposta',
                  'tempo_sex_resposta',
                  'dinheiro_2',
                  'saude_2',
                  'familia_2',
                  'trabalho_2',
                  'setimo_evento',
                  'setima_resposta',
                  'tempo_set_resposta',
                  'oitavo_evento',
                  'oitava_resposta',
                  'tempo_oit_resposta',
                  'nono_evento',
                  'nona_resposta',
                  'tempo_non_resposta',
                  'dinheiro_3',
                  'saude_3',
                  'familia_3',
                  'trabalho_3',
                  'decimo_evento',
                  'decima_resposta',
                  'tempo_dec_resposta',
                  'decimo_primeiro_evento',
                  'decima_p_resposta',
                  'tempo_decp_resposta',
                  'decimo_segundo_evento',
                  'decima_s_resposta',
                  'tempo_decs_resposta',
                  'dinheiro_4',
                  'saude_4',
                  'familia_4',
                  'trabalho_4'
    ];
    var json2csvParser = new Json2csvParser({ fields });

    var functionResult;
    var reportQuery = `
        SELECT S.participante,
        E.prim_evento,
        E.prim_resposta,
        E.tempo_prim_resposta,
        E.segundo_evento,
        E.segunda_resposta,
        E.tempo_seg_resposta,
        E.terceiro_evento,
        E.terceira_resposta,
        E.tempo_ter_resposta,
        S.dinheiro_1,
        S.saude_1,
        S.familia_1,
        S.trabalho_1,
        E.quarto_evento,
        E.quarta_resposta,
        E.tempo_ter_resposta,
        E.tempo_qua_resposta,
        E.quinto_evento,
        E.tempo_qui_resposta,
        E.sexto_evento,
        E.sexta_resposta,
        E.tempo_sex_resposta,
        S.dinheiro_2,
        S.saude_2,
        S.familia_2,
        S.trabalho_2,
        E.setimo_evento,
        E.setima_resposta,
        E.tempo_set_resposta,
        E.oitavo_evento,
        E.oitava_resposta,
        E.tempo_oit_resposta,
        E.nono_evento,
        E.nona_resposta,
        E.tempo_non_resposta,
        S.dinheiro_3,
        S.saude_3,
        S.familia_3,
        S.trabalho_3,
        E.decimo_evento,
        E.decima_resposta,
        E.tempo_dec_resposta,
        E.decimo_primeiro_evento,
        E.decima_p_resposta,
        E.tempo_decp_resposta,
        E.decimo_segundo_evento,
        E.decima_s_resposta,
        E.tempo_decs_resposta,
        S.dinheiro_4,
        S.saude_4,
        S.familia_4,
        S.trabalho_4
        FROM (
                SELECT A.participante,
                       max(familia_1) as familia_1,
                       max(familia_2) as familia_2,
                       max(familia_3) as familia_3,
                       max(familia_4) as familia_4,
                       max(trabalho_1) as trabalho_1,
                       max(trabalho_2) as trabalho_2,
                       max(trabalho_3) as trabalho_3,
                       max(trabalho_4) as trabalho_4,
                       max(saude_1) as saude_1,
                       max(saude_2) as saude_2,
                       max(saude_3) as saude_3,
                       max(saude_4) as saude_4,
                       max(dinheiro_1) as dinheiro_1,
                       max(dinheiro_2) as dinheiro_2,
                       max(dinheiro_3) as dinheiro_3,
                       max(dinheiro_4) as dinheiro_4
                       FROM (
                                SELECT  i.id as participante,
                                        w.week_number as semana,
                                        re.status_family_activity + re.status_family_event as family,
                                        re.status_work_activity  +  re.status_work_event as work,
                                        re.status_health_activity + re.status_health_event as health,
                                        re.status_money_activity +  re.status_money_event as monei,
                                        NTH_VALUE(re.status_family_activity,1)   OVER w + NTH_VALUE(re.status_family_event,1)   OVER w AS 'familia_1',
                                        NTH_VALUE(re.status_work_activity,1)   OVER w + NTH_VALUE(re.status_work_event,1)   OVER w AS 'trabalho_1',
                                        NTH_VALUE(re.status_health_activity,1)   OVER w + NTH_VALUE(re.status_health_event,1)   OVER w AS 'saude_1',
                                        NTH_VALUE(re.status_money_activity,1)   OVER w + NTH_VALUE(re.status_money_event,1)   OVER w AS 'dinheiro_1',
                                        NTH_VALUE(re.status_family_activity,2)   OVER w + NTH_VALUE(re.status_family_event,2)   OVER w AS 'familia_2',
                                        NTH_VALUE(re.status_work_activity,2)   OVER w + NTH_VALUE(re.status_work_event,2)   OVER w AS 'trabalho_2',
                                        NTH_VALUE(re.status_health_activity,2)   OVER w + NTH_VALUE(re.status_health_event,2)   OVER w AS 'saude_2',
                                        NTH_VALUE(re.status_money_activity,2)   OVER w + NTH_VALUE(re.status_money_event,2)   OVER w AS 'dinheiro_2',
                                        NTH_VALUE(re.status_family_activity,3)   OVER w + NTH_VALUE(re.status_family_event,3)   OVER w AS 'familia_3',
                                        NTH_VALUE(re.status_work_activity,3)   OVER w + NTH_VALUE(re.status_work_event,3)   OVER w AS 'trabalho_3',
                                        NTH_VALUE(re.status_health_activity,3)   OVER w + NTH_VALUE(re.status_health_event,3)   OVER w AS 'saude_3',
                                        NTH_VALUE(re.status_money_activity,3)   OVER w + NTH_VALUE(re.status_money_event,3)   OVER w AS 'dinheiro_3',
                                        NTH_VALUE(re.status_family_activity,4)   OVER w + NTH_VALUE(re.status_family_event,4)   OVER w AS 'familia_4',
                                        NTH_VALUE(re.status_work_activity,4)   OVER w + NTH_VALUE(re.status_work_event,4)   OVER w AS 'trabalho_4',
                                        NTH_VALUE(re.status_health_activity,4)   OVER w + NTH_VALUE(re.status_health_event,4)   OVER w AS 'saude_4',
                                        NTH_VALUE(re.status_money_activity,4)   OVER w + NTH_VALUE(re.status_money_event,4)   OVER w AS 'dinheiro_4'
                                        FROM days as d
                                        INNER JOIN results as re on re.day_id = d.id
                                        INNER JOIN weeks as w on d.week_id = w.id
                                        INNER JOIN schedules as s on w.schedule_id =  s.id
                                        INNER JOIN interviews as i on s.interview_id = i.id 
                                        INNER JOIN (SELECT  i.id as id_participante,
                                                            w.week_number,
                                                            max(d.day_number) as ult_dia_da_semana
                                                            FROM days as d
                                                            INNER JOIN weeks as w on d.week_id = w.id
                                                            INNER JOIN schedules as s on w.schedule_id = s.id
                                                            INNER JOIN interviews as i on s.interview_id = i.id
                                                            GROUP BY i.id, w.week_number
                                                    ) as u on d.day_number = u.ult_dia_da_semana and u.id_participante = i.id
                           WINDOW w as (PARTITION BY i.id ORDER BY i.id, w.week_number
                           ROWS UNBOUNDED PRECEDING) 
                           ) AS A GROUP BY A.participante
              ) AS S
        INNER JOIN (
                    SELECT  A.participante,
                            max(A.prim_evento) as prim_evento,
                            max(A.prim_resposta) as prim_resposta,
                            max(A.tempo_prim_resposta) as tempo_prim_resposta,
                            max(A.segundo_evento) as segundo_evento,
                            max(A.segunda_resposta) as segunda_resposta,
                            max(A.tempo_seg_resposta) as tempo_seg_resposta,
                            max(A.terceiro_evento) as terceiro_evento,
                            max(A.terceira_resposta) as terceira_resposta,
                            max(A.tempo_ter_resposta) as tempo_ter_resposta,
                            max(A.quarto_evento) as quarto_evento,
                            max(A.quarta_resposta) as quarta_resposta,
                            max(A.tempo_qua_resposta) as tempo_qua_resposta,
                            max(A.quinto_evento) as quinto_evento,
                            max(A.quinta_resposta) as quinta_resposta,
                            max(A.tempo_qui_resposta) as tempo_qui_resposta,
                            max(A.sexto_evento) as sexto_evento,
                            max(A.sexta_resposta) as sexta_resposta,
                            max(A.tempo_sex_resposta) as tempo_sex_resposta,
                            max(A.setimo_evento) as setimo_evento,
                            max(A.setima_resposta) as setima_resposta,
                            max(A.tempo_set_resposta) as tempo_set_resposta,
                            max(A.oitavo_evento) as oitavo_evento,
                            max(A.oitava_resposta) as oitava_resposta,
                            max(A.tempo_oit_resposta) as tempo_oit_resposta,
                            max(A.nono_evento) as nono_evento,
                            max(A.nona_resposta) as nona_resposta,
                            max(A.tempo_non_resposta) as tempo_non_resposta,
                            max(A.decimo_evento) as decimo_evento,
                            max(A.decima_resposta) as decima_resposta,
                            max(A.tempo_dec_resposta) as tempo_dec_resposta,
                            max(A.decimo_primeiro_evento) as decimo_primeiro_evento,
                            max(A.decima_p_resposta) as decima_p_resposta,
                            max(A.tempo_decp_resposta) as tempo_decp_resposta,
                            max(A.decimo_segundo_evento) as decimo_segundo_evento,
                            max(A.decima_s_resposta) as decima_s_resposta,
                            max(A.tempo_decs_resposta) as tempo_decs_resposta
                            FROM (  
                                    SELECT  q.interview_id as participante,
                                    q.event_id,
                                    q.choice,
                                    q.question_appears_datetime,
                                    q.answered_question_datetime,
                                    NTH_VALUE(q.event_id,1)   OVER w AS 'prim_evento',
                                    NTH_VALUE(q.event_id,2)   OVER w AS 'segundo_evento',
                                    NTH_VALUE(q.event_id,3)   OVER w AS 'terceiro_evento',
                                    NTH_VALUE(q.event_id,4)   OVER w AS 'quarto_evento',
                                    NTH_VALUE(q.event_id,5)   OVER w AS 'quinto_evento',
                                    NTH_VALUE(q.event_id,6)   OVER w AS 'sexto_evento',
                                    NTH_VALUE(q.event_id,7)   OVER w AS 'setimo_evento',
                                    NTH_VALUE(q.event_id,8)   OVER w AS 'oitavo_evento',
                                    NTH_VALUE(q.event_id,9)   OVER w AS 'nono_evento',
                                    NTH_VALUE(q.event_id,10)   OVER w AS 'decimo_evento',
                                    NTH_VALUE(q.event_id,11)   OVER w AS 'decimo_primeiro_evento',
                                    NTH_VALUE(q.event_id,12)   OVER w AS 'decimo_segundo_evento',
                                    CASE WHEN (NTH_VALUE(q.choice,1) OVER w)='W' then 'T' else 'F' end AS 'prim_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,2) OVER w)='W' then 'T' else 'F' end AS 'segunda_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,3) OVER w)='W' then 'T' else 'F' end AS 'terceira_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,4) OVER w)='W' then 'T' else 'F' end AS 'quarta_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,5) OVER w)='W' then 'T' else 'F' end AS 'quinta_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,6) OVER w)='W' then 'T' else 'F' end AS 'sexta_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,7) OVER w)='W' then 'T' else 'F' end AS 'setima_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,8) OVER w)='W' then 'T' else 'F' end AS 'oitava_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,9) OVER w)='W' then 'T' else 'F' end AS 'nona_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,10) OVER w)='W' then 'T' else 'F' end AS 'decima_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,11) OVER w)='W' then 'T' else 'F' end AS 'decima_p_resposta',
                                    CASE WHEN (NTH_VALUE(q.choice,12) OVER w)='W' then 'T' else 'F' end AS 'decima_s_resposta',
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,1) OVER w, NTH_VALUE(q.answered_question_datetime,1) OVER w) as tempo_prim_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,2) OVER w, NTH_VALUE(q.answered_question_datetime,2) OVER w) as tempo_seg_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,3) OVER w, NTH_VALUE(q.answered_question_datetime,3) OVER w) as tempo_ter_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,4) OVER w, NTH_VALUE(q.answered_question_datetime,4) OVER w) as tempo_qua_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,5) OVER w, NTH_VALUE(q.answered_question_datetime,5) OVER w) as tempo_qui_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,6) OVER w, NTH_VALUE(q.answered_question_datetime,6) OVER w) as tempo_sex_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,7) OVER w, NTH_VALUE(q.answered_question_datetime,7) OVER w) as tempo_set_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,8) OVER w, NTH_VALUE(q.answered_question_datetime,8) OVER w) as tempo_oit_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,9) OVER w, NTH_VALUE(q.answered_question_datetime,9) OVER w) as tempo_non_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,10) OVER w, NTH_VALUE(q.answered_question_datetime,10) OVER w) as tempo_dec_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,11) OVER w, NTH_VALUE(q.answered_question_datetime,11) OVER w) as tempo_decp_resposta,
                                    timestampdiff(SECOND, NTH_VALUE(q.question_appears_datetime,12) OVER w, NTH_VALUE(q.answered_question_datetime,12) OVER w) as tempo_decs_resposta
                                    FROM questions as q    
                                    INNER JOIN hours as h on q.id = h.question_id
                                    INNER JOIN days as d on h.day_id = d.id
                                    LEFT JOIN weeks as w on d.week_id = w.id
                                    WINDOW w as (PARTITION BY q.interview_id ORDER BY q.interview_id, d.day_number
                                                 ROWS UNBOUNDED PRECEDING)  
                                  ) AS A GROUP BY A.participante                                                   
                    ) AS E ON S.participante = E.participante`;    
    functionResult = db.sequelize.query(reportQuery,{type: db.sequelize.QueryTypes.SELECT}).then(
                                                                                                 function(results){
                                                                                                                    res.setHeader('Content-disposition', 'attachment; filename=relatorio.csv');
                                                                                                                    res.set('Content-Type', 'text/csv');
                                                                                                                    res.send(json2csvParser.parse(results));
                                                                                                                   });
};